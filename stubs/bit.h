/****************************************************************

  Generated by Vortex DDS IDL to C Translator
  File name: bit.h
  Source: bit.idl
  Generated: Sun Jan 21 18:34:03 CET 2018
  Vortex DDS: V0.1.0

*****************************************************************/

#include "ddsc/dds_public_impl.h"

#ifndef _DDSL_BIT_H_
#define _DDSL_BIT_H_


#ifdef __cplusplus
extern "C" {
#endif

typedef struct dds_bit_bytes
{
  uint32_t _maximum;
  uint32_t _length;
  uint8_t (*_buffer);
  bool _release;
} dds_bit_bytes;

#define dds_bit_bytes__alloc() \
((dds_bit_bytes*) dds_alloc (sizeof (dds_bit_bytes)));

#define dds_bit_bytes_allocbuf(l) \
((uint8_t (*)) dds_alloc ((l) * sizeof (uint8_t)))


typedef struct dds_bit_SKeyBValue
{
  char * key;
  dds_bit_bytes value;
} dds_bit_SKeyBValue;

extern const dds_topic_descriptor_t dds_bit_SKeyBValue_desc;

#define dds_bit_SKeyBValue__alloc() \
((dds_bit_SKeyBValue*) dds_alloc (sizeof (dds_bit_SKeyBValue)));

#define dds_bit_SKeyBValue_free(d,o) \
dds_sample_free ((d), &dds_bit_SKeyBValue_desc, (o))


typedef struct dds_bit_IKeyBValue
{
  int32_t key;
  dds_bit_bytes value;
} dds_bit_IKeyBValue;

extern const dds_topic_descriptor_t dds_bit_IKeyBValue_desc;

#define dds_bit_IKeyBValue__alloc() \
((dds_bit_IKeyBValue*) dds_alloc (sizeof (dds_bit_IKeyBValue)));

#define dds_bit_IKeyBValue_free(d,o) \
dds_sample_free ((d), &dds_bit_IKeyBValue_desc, (o))


typedef struct dds_bit_IKeySValue
{
  int32_t key;
  char * value;
} dds_bit_IKeySValue;

extern const dds_topic_descriptor_t dds_bit_IKeySValue_desc;

#define dds_bit_IKeySValue__alloc() \
((dds_bit_IKeySValue*) dds_alloc (sizeof (dds_bit_IKeySValue)));

#define dds_bit_IKeySValue_free(d,o) \
dds_sample_free ((d), &dds_bit_IKeySValue_desc, (o))


typedef struct dds_bit_SKeySValue
{
  char * key;
  char * value;
} dds_bit_SKeySValue;

extern const dds_topic_descriptor_t dds_bit_SKeySValue_desc;

#define dds_bit_SKeySValue__alloc() \
((dds_bit_SKeySValue*) dds_alloc (sizeof (dds_bit_SKeySValue)));

#define dds_bit_SKeySValue_free(d,o) \
dds_sample_free ((d), &dds_bit_SKeySValue_desc, (o))


typedef struct dds_bit_SValue
{
  char * value;
} dds_bit_SValue;

extern const dds_topic_descriptor_t dds_bit_SValue_desc;

#define dds_bit_SValue__alloc() \
((dds_bit_SValue*) dds_alloc (sizeof (dds_bit_SValue)));

#define dds_bit_SValue_free(d,o) \
dds_sample_free ((d), &dds_bit_SValue_desc, (o))

#ifdef __cplusplus
}
#endif
#endif /* _DDSL_BIT_H_ */
